{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","reversed","setReversed","sortedGoods","goods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,oBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA/BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,SAEPI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcO,UAGTP,EAMaQ,CAClBjB,EAAiB,CAAEG,YAAWE,aAQhC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASc,WACrCK,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcJ,EAASc,WAJvC,iCAUA,wBACEM,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASgB,SACrCG,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAcJ,EAASgB,SAJvC,4BAUA,wBACEI,KAAK,SACLC,QAAS,kBAAMd,GAAaD,IAC5Ba,UAAWG,IAAG,oBAAqB,CACjC,YAAahB,IAJjB,sBAUEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVE,QA1CI,WACZhB,EAAa,IACbE,GAAY,IAqCN,sBAUJ,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.157639da.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortingParams {\n  sortField: string;\n  reversed: boolean;\n}\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reversed }: SortingParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const sortedGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n\n  const reset = () => {\n    setSortField('');\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alphabet)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReversed(!reversed)}\n          className={cn('button is-warning', {\n            'is-light': !reversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}